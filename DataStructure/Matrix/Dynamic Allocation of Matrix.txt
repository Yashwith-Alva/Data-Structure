1) Using Single Pointer:
    int r = 3, c = 4;
    int *ptr = malloc(r*c * sizeof(int));

2) Using Array of pointers:
    int r = 3, c = 4;
    int *arr[r];
    for(int i = 0; i < r; i++)
        arr[i] = (int*)malloc(sizeof(int) * c);

3) Using Pointer to a Pointer:
    int r = 3, c = 4;
    int **arr = (int**)malloc(sizeof(int*) * r);
    for(int i = 0; i < r; i++)
        arr[i] = (int*)malloc(sizeof(int) * c);

4) Using Double pointer and one malloc call:
    int r = 3, c = 4, len= 0;
    int* ptr, int **arr;
    len = sizeof(int*) * r + sizeof(int) * r * c;  // r * (sizeof(int*) + sizeof(int) * c);
    arr = (int**)malloc(len);

5) Using a pointer to Variable length array:
    // Doesn't allow a[i][j] but use (*arr)[i][j]
    int row = 3, col = 4;
    int (*arr)[row][col] = malloc(sizeof *arr);

6) Using a pointer to the first row of VLA
    // Does allow arr[i][j]
    int row = 3, col =4;
    int (*arr)[col] = calloc(row, sizeof *arr);